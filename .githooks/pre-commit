#!/bin/sh
#
# A hook script to verify what is about to be committed. Called by
# "git commit" with no arguments.  The hook exits with a non-zero
# status after issuing an appropriate message if it wants to stop
# the commit.
#
# This is based on the default "pre-commit.sample" file.

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
    # Note that the use of brackets around a tr range is ok here, (it's
    # even required, for portability to Solaris 10's /usr/bin/tr), since
    # the square bracket bytes happen to fall in the designated range.
    test $(git diff --cached --name-only --diff-filter=A -z $against |
      LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached $against -- || exit $?

# Run the test suite and fail if any test fails.
git commit --quiet --no-verify -m temp
git stash push --quiet --include-untracked
git reset --quiet HEAD~1
git add --all

# TODO: Do this for every supported architecture.
PHOENIX_TARGET="aarch64/qemu-virt" \
PHOENIX_ASSEMBLER="aarch64-none-elf-as" \
PHOENIX_CPU="cortex-a53" \
PHOENIX_ARCHIVER="aarch64-none-elf-ar" \
./test-suite.sh
result=$?

git stash pop --quiet || git stash drop --quiet

if [ ! $result ]
then
    cat <<\EOF
Error: Test suite failed.

Check the output shown above and fix any errors, then try again.
EOF
    exit $result
fi
